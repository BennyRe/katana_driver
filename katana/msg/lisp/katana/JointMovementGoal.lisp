; Auto-generated. Do not edit!


(in-package katana-msg)


;//! \htmlinclude JointMovementGoal.msg.html

(defclass <JointMovementGoal> (ros-message)
  ((jointGoal
    :reader jointGoal-val
    :initarg :jointGoal
    :type sensor_msgs-msg:<JointState>
    :initform (make-instance 'sensor_msgs-msg:<JointState>)))
)
(defmethod serialize ((msg <JointMovementGoal>) ostream)
  "Serializes a message object of type '<JointMovementGoal>"
  (serialize (slot-value msg 'jointGoal) ostream)
)
(defmethod deserialize ((msg <JointMovementGoal>) istream)
  "Deserializes a message object of type '<JointMovementGoal>"
  (deserialize (slot-value msg 'jointGoal) istream)
  msg
)
(defmethod ros-datatype ((msg (eql '<JointMovementGoal>)))
  "Returns string type for a message object of type '<JointMovementGoal>"
  "katana/JointMovementGoal")
(defmethod md5sum ((type (eql '<JointMovementGoal>)))
  "Returns md5sum for a message object of type '<JointMovementGoal>"
  "03f8456b346613dcdf3d0e35b6b1a281")
(defmethod message-definition ((type (eql '<JointMovementGoal>)))
  "Returns full string definition for message of type '<JointMovementGoal>"
  (format nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#goal definition~%sensor_msgs/JointState jointGoal~%~%================================================================================~%MSG: sensor_msgs/JointState~%# This is a message that holds data to describe the state of a set of torque controlled joints. ~%#~%# The state of each joint (revolute or prismatic) is defined by:~%#  * the position of the joint (rad or m),~%#  * the velocity of the joint (rad/s or m/s) and ~%#  * the effort that is applied in the joint (Nm or N).~%#~%# Each joint is uniquely identified by its name~%# The header specifies the time at which the joint states were recorded. All the joint states~%# in one message have to be recorded at the same time.~%#~%# This message consists of a multiple arrays, one for each part of the joint state. ~%# The goal is to make each of the fields optional. When e.g. your joints have no~%# effort associated with them, you can leave the effort array empty. ~%#~%# All arrays in this message should have the same size, or be empty.~%# This is the only way to uniquely associate the joint name with the correct~%# states.~%~%~%Header header~%~%string[] name~%float64[] position~%float64[] velocity~%float64[] effort~%~%================================================================================~%MSG: roslib/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.secs: seconds (stamp_secs) since epoch~%# * stamp.nsecs: nanoseconds since stamp_secs~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%~%"))
(defmethod serialization-length ((msg <JointMovementGoal>))
  (+ 0
     (serialization-length (slot-value msg 'jointGoal))
))
(defmethod ros-message-to-list ((msg <JointMovementGoal>))
  "Converts a ROS message object to a list"
  (list '<JointMovementGoal>
    (cons ':jointGoal (jointGoal-val msg))
))
