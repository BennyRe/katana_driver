/* Auto-generated by genmsg_cpp for file /home/student/h/hdeeken/ros/uos-ros-pkg/katana_driver/katana_interpolated_ik_motion_planner/srv/SetInterpolatedIKMotionPlanParams.srv */
#ifndef KATANA_INTERPOLATED_IK_MOTION_PLANNER_SERVICE_SETINTERPOLATEDIKMOTIONPLANPARAMS_H
#define KATANA_INTERPOLATED_IK_MOTION_PLANNER_SERVICE_SETINTERPOLATEDIKMOTIONPLANPARAMS_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace katana_interpolated_ik_motion_planner
{
template <class ContainerAllocator>
struct SetInterpolatedIKMotionPlanParamsRequest_ : public ros::Message
{
  typedef SetInterpolatedIKMotionPlanParamsRequest_<ContainerAllocator> Type;

  SetInterpolatedIKMotionPlanParamsRequest_()
  : num_steps(0)
  , consistent_angle(0.0)
  , collision_check_resolution(0)
  , steps_before_abort(0)
  , pos_spacing(0.0)
  , rot_spacing(0.0)
  , collision_aware(0)
  , start_from_end(0)
  , max_joint_vels()
  , max_joint_accs()
  {
  }

  SetInterpolatedIKMotionPlanParamsRequest_(const ContainerAllocator& _alloc)
  : num_steps(0)
  , consistent_angle(0.0)
  , collision_check_resolution(0)
  , steps_before_abort(0)
  , pos_spacing(0.0)
  , rot_spacing(0.0)
  , collision_aware(0)
  , start_from_end(0)
  , max_joint_vels(_alloc)
  , max_joint_accs(_alloc)
  {
  }

  typedef int32_t _num_steps_type;
  int32_t num_steps;

  typedef double _consistent_angle_type;
  double consistent_angle;

  typedef int32_t _collision_check_resolution_type;
  int32_t collision_check_resolution;

  typedef int32_t _steps_before_abort_type;
  int32_t steps_before_abort;

  typedef double _pos_spacing_type;
  double pos_spacing;

  typedef double _rot_spacing_type;
  double rot_spacing;

  typedef int8_t _collision_aware_type;
  int8_t collision_aware;

  typedef int8_t _start_from_end_type;
  int8_t start_from_end;

  typedef std::vector<double, typename ContainerAllocator::template rebind<double>::other >  _max_joint_vels_type;
  std::vector<double, typename ContainerAllocator::template rebind<double>::other >  max_joint_vels;

  typedef std::vector<double, typename ContainerAllocator::template rebind<double>::other >  _max_joint_accs_type;
  std::vector<double, typename ContainerAllocator::template rebind<double>::other >  max_joint_accs;


  ROS_DEPRECATED uint32_t get_max_joint_vels_size() const { return (uint32_t)max_joint_vels.size(); }
  ROS_DEPRECATED void set_max_joint_vels_size(uint32_t size) { max_joint_vels.resize((size_t)size); }
  ROS_DEPRECATED void get_max_joint_vels_vec(std::vector<double, typename ContainerAllocator::template rebind<double>::other > & vec) const { vec = this->max_joint_vels; }
  ROS_DEPRECATED void set_max_joint_vels_vec(const std::vector<double, typename ContainerAllocator::template rebind<double>::other > & vec) { this->max_joint_vels = vec; }
  ROS_DEPRECATED uint32_t get_max_joint_accs_size() const { return (uint32_t)max_joint_accs.size(); }
  ROS_DEPRECATED void set_max_joint_accs_size(uint32_t size) { max_joint_accs.resize((size_t)size); }
  ROS_DEPRECATED void get_max_joint_accs_vec(std::vector<double, typename ContainerAllocator::template rebind<double>::other > & vec) const { vec = this->max_joint_accs; }
  ROS_DEPRECATED void set_max_joint_accs_vec(const std::vector<double, typename ContainerAllocator::template rebind<double>::other > & vec) { this->max_joint_accs = vec; }
private:
  static const char* __s_getDataType_() { return "katana_interpolated_ik_motion_planner/SetInterpolatedIKMotionPlanParamsRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "351122754b3043b9f5602d68d4eec5db"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "351122754b3043b9f5602d68d4eec5db"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
\n\
\n\
int32 num_steps\n\
\n\
\n\
\n\
float64 consistent_angle\n\
\n\
\n\
\n\
int32 collision_check_resolution\n\
\n\
\n\
\n\
\n\
\n\
int32 steps_before_abort\n\
\n\
\n\
\n\
float64 pos_spacing\n\
\n\
\n\
\n\
float64 rot_spacing\n\
\n\
\n\
\n\
byte collision_aware\n\
\n\
\n\
\n\
byte start_from_end\n\
\n\
\n\
\n\
float64[] max_joint_vels\n\
\n\
\n\
\n\
float64[] max_joint_accs\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, num_steps);
    ros::serialization::serialize(stream, consistent_angle);
    ros::serialization::serialize(stream, collision_check_resolution);
    ros::serialization::serialize(stream, steps_before_abort);
    ros::serialization::serialize(stream, pos_spacing);
    ros::serialization::serialize(stream, rot_spacing);
    ros::serialization::serialize(stream, collision_aware);
    ros::serialization::serialize(stream, start_from_end);
    ros::serialization::serialize(stream, max_joint_vels);
    ros::serialization::serialize(stream, max_joint_accs);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, num_steps);
    ros::serialization::deserialize(stream, consistent_angle);
    ros::serialization::deserialize(stream, collision_check_resolution);
    ros::serialization::deserialize(stream, steps_before_abort);
    ros::serialization::deserialize(stream, pos_spacing);
    ros::serialization::deserialize(stream, rot_spacing);
    ros::serialization::deserialize(stream, collision_aware);
    ros::serialization::deserialize(stream, start_from_end);
    ros::serialization::deserialize(stream, max_joint_vels);
    ros::serialization::deserialize(stream, max_joint_accs);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(num_steps);
    size += ros::serialization::serializationLength(consistent_angle);
    size += ros::serialization::serializationLength(collision_check_resolution);
    size += ros::serialization::serializationLength(steps_before_abort);
    size += ros::serialization::serializationLength(pos_spacing);
    size += ros::serialization::serializationLength(rot_spacing);
    size += ros::serialization::serializationLength(collision_aware);
    size += ros::serialization::serializationLength(start_from_end);
    size += ros::serialization::serializationLength(max_joint_vels);
    size += ros::serialization::serializationLength(max_joint_accs);
    return size;
  }

  typedef boost::shared_ptr< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct SetInterpolatedIKMotionPlanParamsRequest
typedef  ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest_<std::allocator<void> > SetInterpolatedIKMotionPlanParamsRequest;

typedef boost::shared_ptr< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest> SetInterpolatedIKMotionPlanParamsRequestPtr;
typedef boost::shared_ptr< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest const> SetInterpolatedIKMotionPlanParamsRequestConstPtr;


template <class ContainerAllocator>
struct SetInterpolatedIKMotionPlanParamsResponse_ : public ros::Message
{
  typedef SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator> Type;

  SetInterpolatedIKMotionPlanParamsResponse_()
  {
  }

  SetInterpolatedIKMotionPlanParamsResponse_(const ContainerAllocator& _alloc)
  {
  }


private:
  static const char* __s_getDataType_() { return "katana_interpolated_ik_motion_planner/SetInterpolatedIKMotionPlanParamsResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "d41d8cd98f00b204e9800998ecf8427e"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "351122754b3043b9f5602d68d4eec5db"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    return size;
  }

  typedef boost::shared_ptr< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct SetInterpolatedIKMotionPlanParamsResponse
typedef  ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<std::allocator<void> > SetInterpolatedIKMotionPlanParamsResponse;

typedef boost::shared_ptr< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse> SetInterpolatedIKMotionPlanParamsResponsePtr;
typedef boost::shared_ptr< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse const> SetInterpolatedIKMotionPlanParamsResponseConstPtr;

struct SetInterpolatedIKMotionPlanParams
{

typedef SetInterpolatedIKMotionPlanParamsRequest Request;
typedef SetInterpolatedIKMotionPlanParamsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SetInterpolatedIKMotionPlanParams
} // namespace katana_interpolated_ik_motion_planner

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "351122754b3043b9f5602d68d4eec5db";
  }

  static const char* value(const  ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x351122754b3043b9ULL;
  static const uint64_t static_value2 = 0xf5602d68d4eec5dbULL;
};

template<class ContainerAllocator>
struct DataType< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "katana_interpolated_ik_motion_planner/SetInterpolatedIKMotionPlanParamsRequest";
  }

  static const char* value(const  ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
int32 num_steps\n\
\n\
\n\
\n\
float64 consistent_angle\n\
\n\
\n\
\n\
int32 collision_check_resolution\n\
\n\
\n\
\n\
\n\
\n\
int32 steps_before_abort\n\
\n\
\n\
\n\
float64 pos_spacing\n\
\n\
\n\
\n\
float64 rot_spacing\n\
\n\
\n\
\n\
byte collision_aware\n\
\n\
\n\
\n\
byte start_from_end\n\
\n\
\n\
\n\
float64[] max_joint_vels\n\
\n\
\n\
\n\
float64[] max_joint_accs\n\
\n\
\n\
";
  }

  static const char* value(const  ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "katana_interpolated_ik_motion_planner/SetInterpolatedIKMotionPlanParamsResponse";
  }

  static const char* value(const  ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
";
  }

  static const char* value(const  ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.num_steps);
    stream.next(m.consistent_angle);
    stream.next(m.collision_check_resolution);
    stream.next(m.steps_before_abort);
    stream.next(m.pos_spacing);
    stream.next(m.rot_spacing);
    stream.next(m.collision_aware);
    stream.next(m.start_from_end);
    stream.next(m.max_joint_vels);
    stream.next(m.max_joint_accs);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetInterpolatedIKMotionPlanParamsRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetInterpolatedIKMotionPlanParamsResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParams> {
  static const char* value() 
  {
    return "351122754b3043b9f5602d68d4eec5db";
  }

  static const char* value(const katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParams&) { return value(); } 
};

template<>
struct DataType<katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParams> {
  static const char* value() 
  {
    return "katana_interpolated_ik_motion_planner/SetInterpolatedIKMotionPlanParams";
  }

  static const char* value(const katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParams&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "351122754b3043b9f5602d68d4eec5db";
  }

  static const char* value(const katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "katana_interpolated_ik_motion_planner/SetInterpolatedIKMotionPlanParams";
  }

  static const char* value(const katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "351122754b3043b9f5602d68d4eec5db";
  }

  static const char* value(const katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "katana_interpolated_ik_motion_planner/SetInterpolatedIKMotionPlanParams";
  }

  static const char* value(const katana_interpolated_ik_motion_planner::SetInterpolatedIKMotionPlanParamsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // KATANA_INTERPOLATED_IK_MOTION_PLANNER_SERVICE_SETINTERPOLATEDIKMOTIONPLANPARAMS_H

