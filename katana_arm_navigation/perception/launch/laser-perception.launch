<launch>
  <!-- send planning environment parameters -->
  <include file="$(find katana_arm_navigation)/config/launch/katana_planning_environment.launch" />

  <!-- TODO -->
  <node pkg="tf" type="static_transform_publisher" name="base_to_kinect_rgb"
    args="0 0 0.10 -1.57 0 -1.57 /katana_internal_controlbox_link /kinect_rgb 10" />
  <node pkg="tf" type="static_transform_publisher" name="kinect_rgb_to_kinect_depth"
    args="-0.03 0.0 0.0 0.0 0.0 0.0 /kinect_rgb /kinect_depth 10" />

  <include file="$(find kinect_camera)/launch/kinect_node.launch" />

  <!-- need to clear known objects from scans -->
  <node pkg="planning_environment" type="clear_known_objects" name="clear_known_objects">
    <remap from="cloud_in" to="kinect/depth/points" />
    <remap from="cloud_out" to="tilt_scan_cloud_known" />
    <param name="sensor_frame" type="string" value="kinect_depth" />
    <param name="fixed_frame" type="string" value="/katana_internal_controlbox_link" /> <!-- TODO: use map frame here -->
    <param name="object_padd" type="double" value="0.02" />
    <param name="object_scale" type="double" value="1.0" />
  </node>

  <!-- displaying known model markers -->
  <node pkg="planning_environment" name="display_planner_collision_model_environment_server" 
      type="display_planner_collision_model" respawn="false" output="screen">
    <param name="skip_collision_map" type="bool" value="false" />
    <param name="prefix" type="string" value="/environment_server" />
  </node>

   <node pkg="planning_environment" name="display_planner_collision_model_ik" type="display_planner_collision_model" respawn="false" output="screen">
    <param name="skip_collision_map" type="bool" value="false" />
    <param name="prefix" type="string" value="/arm_kinematics" />
  </node>
	
  <!-- need to individually self filter scans -->
  <node pkg="robot_self_filter" type="self_filter" respawn="true" name="self_filter" output="screen">

    <!-- The topic for the input cloud -->
    <remap from="cloud_in" to="tilt_scan_cloud_known" />

    <!-- The topic for the output cloud -->
    <remap from="cloud_out" to="tilt_scan_cloud_filtered" />

    <!-- The frame of the sensor used to obtain the data to be
       filtered; This parameter is optional. If it is not specified,
       shadow points will be considered outside -->
    <param name="sensor_frame" type="string" value="kinect_depth" />

    <rosparam command="load" file="$(find katana_arm_navigation)/perception/config/self_filter.yaml" />
  </node>
  
  <!-- start collision map -->
  <include file="$(find katana_arm_navigation)/perception/launch/collision_map_self_occ.launch" />
  
</launch>
